define(["require", "exports", "./exposer", "./rule-registry-setup", "./builders/reactive-validation-group-builder", "./builders/ruleset-builder", "./builders/validation-group-builder", "./events/model-state-changed-event", "./events/property-changed-event", "./events/property-state-changed-event", "./factories/model-resolver-factory", "./factories/model-watcher-factory", "./processors/field-error-processor", "./processors/field-has-error", "./processors/validation-error", "./helpers/comparer-helper", "./helpers/type-helper", "./resolvers/model-resolver", "./promises/promise-counter", "./rules/advanced-regex-rule", "./rules/date-validation-rule", "./rules/decimal-validation-rule", "./rules/email-validation-rule", "./rules/equal-validation-rule", "./rules/iso-date-validation-rule", "./rules/matches-validation-rule", "./rules/max-length-validation-rule", "./rules/max-value-validation-rule", "./rules/min-length-validation-rule", "./rules/min-value-validation-rule", "./rules/not-equal-validation-rule", "./rules/number-validation-rule", "./rules/regex-validation-rule", "./rules/required-validation-rule", "./rules/rule-registry", "./rules/step-validation-rule", "./validation-groups/reactive-validation-group", "./validation-groups/validation-group", "./rulesets/for-each-rule", "./rulesets/rule-link", "./rulesets/rule-resolver", "./rulesets/ruleset", "./watcher/model-watcher", "./watcher/property-watcher"], function (require, exports, exposer_1, rule_registry_setup_1, reactive_validation_group_builder_1, ruleset_builder_1, validation_group_builder_1, model_state_changed_event_1, property_changed_event_1, property_state_changed_event_1, model_resolver_factory_1, model_watcher_factory_1, field_error_processor_1, field_has_error_1, validation_error_1, comparer_helper_1, type_helper_1, model_resolver_1, promise_counter_1, advanced_regex_rule_1, date_validation_rule_1, decimal_validation_rule_1, email_validation_rule_1, equal_validation_rule_1, iso_date_validation_rule_1, matches_validation_rule_1, max_length_validation_rule_1, max_value_validation_rule_1, min_length_validation_rule_1, min_value_validation_rule_1, not_equal_validation_rule_1, number_validation_rule_1, regex_validation_rule_1, required_validation_rule_1, rule_registry_1, step_validation_rule_1, reactive_validation_group_1, validation_group_1, for_each_rule_1, rule_link_1, rule_resolver_1, ruleset_1, model_watcher_1, property_watcher_1) {
    "use strict";
    function __export(m) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    __export(exposer_1);
    __export(rule_registry_setup_1);
    __export(reactive_validation_group_builder_1);
    __export(ruleset_builder_1);
    __export(validation_group_builder_1);
    __export(model_state_changed_event_1);
    __export(property_changed_event_1);
    __export(property_state_changed_event_1);
    __export(model_resolver_factory_1);
    __export(model_watcher_factory_1);
    __export(field_error_processor_1);
    __export(field_has_error_1);
    __export(validation_error_1);
    __export(comparer_helper_1);
    __export(type_helper_1);
    __export(model_resolver_1);
    __export(promise_counter_1);
    __export(advanced_regex_rule_1);
    __export(date_validation_rule_1);
    __export(decimal_validation_rule_1);
    __export(email_validation_rule_1);
    __export(equal_validation_rule_1);
    __export(iso_date_validation_rule_1);
    __export(matches_validation_rule_1);
    __export(max_length_validation_rule_1);
    __export(max_value_validation_rule_1);
    __export(min_length_validation_rule_1);
    __export(min_value_validation_rule_1);
    __export(not_equal_validation_rule_1);
    __export(number_validation_rule_1);
    __export(regex_validation_rule_1);
    __export(required_validation_rule_1);
    __export(rule_registry_1);
    __export(step_validation_rule_1);
    __export(reactive_validation_group_1);
    __export(validation_group_1);
    __export(for_each_rule_1);
    __export(rule_link_1);
    __export(rule_resolver_1);
    __export(ruleset_1);
    __export(model_watcher_1);
    __export(property_watcher_1);
});
